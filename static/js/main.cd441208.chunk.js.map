{"version":3,"sources":["images/not_found.svg","images/close_button.svg","images/logo.svg","images/delete_button.svg","images/pen.svg","images/edit__button.svg","images/add__button.svg","components/Header.js","utils/Api.js","utils/Utils.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logoPath","alt","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","url","fetch","authorization","then","_getResponseData","_get","name","about","method","body","JSON","stringify","link","cardId","_updateCardLike","resolve","avatar","Card","props","onImageNotFound","evt","target","onerror","notFoundImagePath","onCardClick","card","key","_id","onError","onClick","aria-label","type","likes","find","like","currentUserId","length","deleteButtonPath","React","Component","Main","state","userId","userName","userDescription","userAvatar","cards","getUserInfo","user","setState","catch","err","console","log","getInitialCards","penPath","onEditAvatar","onEditProfile","editButtonPath","onAddPlace","addButtonPath","map","Footer","PopupWithForm","isOpen","action","noValidate","title","children","isSubmitActive","buttonName","onClose","closeButtonPath","ImagePopup","App","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","closeAllPopups","id","required","minLength","maxLength","pattern","defaultValue","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cd441208.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not_found.908c20cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close_button.5df32a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete_button.d8078343.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.d476a8b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit__button.b05083e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/add__button.b2fce4ac.svg\";","import React from 'react';\nimport logoPath from '../images/logo.svg';\n\n\nfunction Header () {\n    return (\n        <header className=\"header\">\n            <a href=\"#\"><img src={logoPath} className=\"header__logo\" alt=\"логотип Mesto\"/>123</a>\n        </header>\n    );\n}\n\nexport default Header;","import {apiConfig} from './Utils.js';\n\nexport class API {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n\n  _get(url) {\n    return fetch(`${this._baseUrl}/${url}`, {\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n      .then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return this._get('users/me');\n  }\n\n\n  getInitialCards() {\n    return this._get('cards');\n  }\n\n  updateUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then(this._getResponseData);\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n    .then(this._getResponseData);\n  }\n\n  _updateCardLike(cardId, method) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: method,\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n    .then(this._getResponseData);\n  }\n\n  likeCard(cardId) {\n    return this._updateCardLike(cardId, 'PUT');\n  }\n\n  dislikeCard(cardId) {\n    return this._updateCardLike(cardId, 'DELETE');\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n      });\n  }\n\n  updateUserAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n      });\n  }\n}\n\nconst api = new API (apiConfig);\n\nexport default api ;","export const validationOptions = {\n    formSelector: '.form',\n    inputSelector: '.form__input',\n    submitButtonSelector: '.form__submit',\n    inactiveButtonClass: 'form__submit_inactive',\n};\n\nexport const apiConfig = {\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n    headers: {\n      authorization: 'f4b731d6-2118-4fcc-9305-6dde1beafd26',\n      'Content-Type': 'application/json'\n    }\n};","import React from 'react';\nimport deleteButtonPath from '../images/delete_button.svg';\nimport notFoundImagePath from '../images/not_found.svg';\n\nclass Card extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    onImageNotFound = (evt) => {\n        evt.target.onerror = null;\n        evt.target.src = notFoundImagePath;\n    }\n\n    onCardClick = () => {\n        this.props.onCardClick(this.props.card);\n    }\n\n    render () {\n        return (\n            <div className=\"elements__item\" key={this.props.card._id}>\n                        <img onError={this.onImageNotFound} onClick={this.onCardClick} className=\"elements__item-picture\" alt=\"Картинка\" src={this.props.card.link}></img>\n                        <div className=\"elements__item-info\">\n                            <h2 className=\"elements__item-title\">{this.props.card.name}</h2>\n                            <div className=\"elements__likes-container\">\n                                <button aria-label=\"like\" type=\"button\" className={`elements__heart-button  ${this.props.card.likes.find((like) => like._id === this.props.currentUserId) ?  \"elements__heart-button_active\" : \"\" }  `}>\n                                </button>\n                                <p className=\"elements__likes\">{this.props.card.likes ? this.props.card.likes.length : 0}</p>\n                            </div>\n                        </div>\n                        <button aria-label=\"delete\" type=\"button\" className=\"elements__delete-button\">\n                            <img src={deleteButtonPath} alt=\"Знак корзины\"></img>\n                        </button>\n            </div>\n        );\n    }\n}    \n\n\nexport default Card;\n","import React from 'react';\n\nimport api from '../utils/Api';\nimport Card from './Card';\n\nimport penPath from '../images/pen.svg';\nimport notFoundImagePath from '../images/not_found.svg';\nimport editButtonPath from '../images/edit__button.svg';\nimport addButtonPath from '../images/add__button.svg';\n\n\n\n\nclass Main extends React.Component {\n  \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userId: null,\n            userName: null,\n            userDescription: null,\n            userAvatar: null,\n            cards:[]\n        }\n    }\n\n    componentDidMount() {\n        api.getUserInfo()\n        .then (user => {\n            this.setState({ userId: user._id,\n                            userName: user.name,\n                            userDescription: user.about,\n                            userAvatar: user.avatar\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        }); \n\n\n        api.getInitialCards()\n        .then(cards => {\n            this.setState({ cards: cards });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    onImageNotFound = (evt) => {\n        evt.target.onerror = null;\n        evt.target.src = notFoundImagePath;\n    }\n\n    render () {\n\n        return (\n            <main className=\"content\">\n                <section className=\"profile\">\n                    <div className=\"profile__info\">\n                        <div className=\"profile__avatar\">\n                            <img src={penPath} className=\"profile_active\" alt=\" Изменение аватарки\"></img>\n                            <img src={this.state.userAvatar} \n                                onError={this.onImageNotFound} \n                                onClick={this.props.onEditAvatar} \n                                className=\"profile__image\" alt=\"Аватар\"></img>\n                        </div>\n                        <div>\n                            <div className=\"profile__name-container\">\n                                <h1 className=\"profile__name\">{this.state.userName}</h1>\n                                <button aria-label=\"edit\" type=\"button\" \n                                onClick={this.props.onEditProfile} \n                                className=\"profile__edit-button\">\n                                    <img src={editButtonPath} alt=\"Кнопка изменения\"></img>\n                                </button>\n                            </div>\n                                <p className=\"profile__profession\">{this.state.userDescription}</p>\n                        </div>\n                    </div>\n                    <button aria-label=\"add\" type=\"button\"\n                    onClick={this.props.onAddPlace}\n                    className=\"profile__add-button\">\n                        <img src={addButtonPath} className=\"profile__add-button-image\" alt=\"Кнопка добавления\"></img>\n                    </button>\n                </section>\n\n                <section className=\"elements\">\n                \n                    {this.state.cards.map((card) => (\n   \n                        <Card  card={card} currentUserId={this.state.userId} key={card._id} onCardClick={this.props.onCardClick}/>\n                        )\n                    )}\n\n                </section>\n\n\n            </main>\n        );\n    }\n\n}\n\n\n\n\n\n\nexport default Main;\n","import React from 'react';\n\n\nfunction Footer () {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__info\">&copy; 2020. Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport closeButtonPath from '../images/close_button.svg';\n\nclass PopupWithForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n  \n    render () {\n\n        return (\n\n            <section className={`popup popup_${this.props.name} ${this.props.isOpen ? \"popup_opened\" : \"\"}`}>\n                    <form name={`popup-${this.props.name}-form`} method=\"get\" action=\"#\" className=\"popup__container form\" noValidate>\n                        <h2 className=\"popup__title\">{this.props.title}</h2>\n                        {this.props.children}\n                        <button type=\"submit\" className={`popup__button form__submit ${this.props.isSubmitActive ? \"\" : \"form__submit_inactive\"}`}>{this.props.buttonName}</button>\n                        <button aria-label=\"close\" type=\"button\" className=\"popup__close-button\" onClick={this.props.onClose} >\n                            <img src={closeButtonPath} alt=\"Кнопка закрыть\" className=\"popup__close-button-image\"></img>\n                        </button>\n                    </form>\n            </section>\n\n        );\n    }\n}    \n\n\n\nexport default PopupWithForm;","import React from 'react';\nimport closeButtonPath from '../images/close_button.svg';\nimport notFoundImagePath from '../images/not_found.svg';\n\nclass ImagePopup extends React.Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    onImageNotFound = (evt) => {\n        evt.target.onerror = null;\n        evt.target.src = notFoundImagePath;\n    }\n    \n    render () {\n        return (\n            <section className={`popup popup_picture ${this.props.card ? \"popup_opened\" : \"\"}`}>\n                    <div className=\"popup__container popup__container_picture\">\n                        <img src={this.props.card !== null ? this.props.card.link : \"\" } onError={this.onImageNotFound}\n                            alt=\"картинка\" className=\"popup__image\"></img>\n                        <h2 className=\"popup__title popup__title_picture\">{this.props.card !== null ? this.props.card.name : \"\" }</h2>\n                        <button aria-label=\"close\" type=\"button\" className=\"popup__close-button\" onClick={this.props.onClose}>\n                            <img src={closeButtonPath} alt=\"Кнопка закрыть\" className=\"popup__close-button-image\"></img>\n                        </button>\n                    </div>\n                </section>\n        );\n    }\n}    \n\n\n\nexport default ImagePopup;","import React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nimport '../index.css';\n\nclass App extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            isEditProfilePopupOpen: false,\n            isAddPlacePopupOpen: false,\n            isEditAvatarPopupOpen: false,\n            selectedCard: null\n        }\n    }\n\n    render () {\n        return (        \n            <div className=\"page\">\n                <Header />\n\n                <Main\n                    onEditAvatar={this.handleEditAvatarClick}\n                    onEditProfile={this.handleEditProfileClick}\n                    onAddPlace={this.handleAddPlaceClick}\n                    onCardClick={this.handleCardClick}\n                />\n\n                <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups}>\n                </ImagePopup>\n\n                <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonName=\"Сохранить\" isSubmitActive={false} isOpen={this.state.isEditProfilePopupOpen}  onClose={this.closeAllPopups}>\n                <input id=\"name-input\" type=\"text\" required minLength=\"2\" maxLength=\"40\"\n                            pattern=\"[A-Za-zА-Яа-яЁё\\s\\-]+$\" defaultValue=\"name\" placeholder=\"Имя\"\n                            className=\"popup__text popup__text_type_name form__input\"></input>\n                        <span id=\"name-input-error\" className=\"form__input-error\"></span>\n                        <input id=\"profession-input\" type=\"text\" required minLength=\"2\" maxLength=\"200\"\n                            pattern=\"[A-Za-zА-Яа-яЁё\\s\\-,]+$\" defaultValue=\"profession\" placeholder=\"О себе\"\n                            className=\"popup__text popup__text_type_profession form__input\"></input>\n                        <span id=\"profession-input-error\" className=\"form__input-error\"></span>\n                </PopupWithForm>\n\n                <PopupWithForm name=\"card\" title=\"Новое место\" buttonName=\"Сохранить\" isSubmitActive={true} isOpen={this.state.isAddPlacePopupOpen} onClose={this.closeAllPopups}>\n                        <input id=\"picture-input\" type=\"text\" required minLength=\"1\" maxLength=\"30\" placeholder=\"Название\"\n                            className=\"popup__text popup__text_type_picture form__input\"></input>\n                        <span id=\"picture-input-error\" className=\"form__input-error\"></span>\n                        <input id=\"url-input\" type=\"url\" required placeholder=\"Ссылка на картинку\"\n                            className=\"popup__text popup__text_type_link form__input\"></input>\n                        <span id=\"url-input-error\" className=\"form__input-error\"></span>\n                </PopupWithForm>\n\n                <PopupWithForm name=\"check\" title=\"Вы уверены?\" buttonName=\"Да\" isSubmitActive={true} isOpen={false} onClose={this.closeAllPopups}>\n                </PopupWithForm>\n\n                <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" buttonName=\"Сохранить\" isSubmitActive={true} isOpen={this.state.isEditAvatarPopupOpen} onClose={this.closeAllPopups}>\n                    <input id=\"url-input\" type=\"url\" required placeholder=\"Ссылка на аватар\"\n                            className=\"popup__text popup__text_type_link form__input\"></input>\n                    <span id=\"url-input-error\" className=\"form__input-error\"></span>\n                </PopupWithForm>\n\n                    \n                <Footer />\n\n\n\n            </div>  \n        );\n    }\n\n\n    handleEditAvatarClick = () => {\n        this.setState({ isEditAvatarPopupOpen: true });\n    }\n    \n    handleEditProfileClick = () => {\n        this.setState({ isEditProfilePopupOpen: true });\n    }\n    \n    handleAddPlaceClick = () => {\n        this.setState({ isAddPlacePopupOpen: true });\n    }\n\n    handleAddPlaceClick = () => {\n        this.setState({ isAddPlacePopupOpen: true });\n    }\n\n    handleCardClick =(card) => {\n        this.setState({selectedCard: card});\n    }\n\n    closeAllPopups = () => {\n        this.setState({ isEditProfilePopupOpen: false,\n            isAddPlacePopupOpen: false, \n            isEditAvatarPopupOpen: false,\n            selectedCard: null\n        });\n    }\n\n\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}